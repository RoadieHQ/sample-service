apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: github-actions-template
  title: Trigger workflow
  description: Triggers workflow.
spec:
  owner: backstage/techdocs-core
  type: service

  parameters:
      - title: "Repo URL 2"
        properties:
          repoUrl:
            type: string
            title: Repository/Service Name
            description: name (in lower-kebab-case) used for the repository and service
            ui:field: RepoUrlPicker
            ui:options:
              requestUserCredentials:
                secretsKey: USER_OAUTH_TOKEN
                additionalScopes:
                  github:
                    - workflow
              allowedHosts:
                - github.com
      - title: "Workflow Id/name"
         properties:
           workflow:
             type: string
      #     - properties:
      #         size:
      #         type: number
      #         enum: [50, 100, 200]
      #       name:
      #         type: string
      #       entity:
      #         type: string
      #         ui:field: EntityPicker
      #       ownedEntity:
      #         type: string
      #         ui:field: OwnedEntityPicker
      #       entityName:
      #         type: string
      #         ui:field: EntityNamePicker
      #       languages:
      #         type: array
      #         items:
      #           type: string
      #           enum: ["java", "ruby", "python", "javascript"]
      #       entityTag:
      #         type: array
      #         ui:field: EntityTagsPicker
      

  #       repoUrl:
  #         type: string
  #         ui:field: RepoUrlPicker
  #         ui:options:
  #           allowedHosts:
  #             - github.com
  #       owner:
  #         type: string
  #         ui:field: OwnerPicker
  #       person:
  #         type: object
  #         properties:
  #           name:
  #             type: string
  #           age:
  #             type: number
  
  steps:
#     - id: publish
#       name: Publish
#       action: publish:github
#       input:
#         sourcePath: new-repo
#         allowedHosts: ['github.com']
#         description: ${{ parameters.description }}
#         repoUrl: ${{ parameters.repoUrl }}
#         token: ${{ secrets.USER_OAUTH_TOKEN }}
#         access: ${{ parameters.repoUrl | replace(r/.*owner=/, "") | replace(r/&repo=.*/, "") }}/${{ parameters.repoOwner }}
#         requireCodeOwnerReviews: false
#         repoVisibility: internal
#         defaultBranch: main
#         deleteBranchOnMerge: true
#         allowMergeCommit: false
#         allowSquashMerge: true
#         allowRebaseMerge: false

    - action: github:actions:dispatch
      id: trigger-build
      name: Trigger Build 1
      input:
        repoUrl: "github.com?repo=sample-service&owner=sblausten"
        workflowId: ${{ parameters.workflow }}
        branchOrTagName: "main"
        token: ${{ secrets.USER_OAUTH_TOKEN }}
        workflowInputs:
          repoName: '${{ parameters.repoUrl | replace(r/.*owner=/, "") | replace(r/&repo=.*/, "") }}/${{ parameters.repoUrl | replace(r/.*repo=/, "") }}'
    #       - id: push
    #         action: publish:github
    #         input:
    #           repoUrl: ${{ parameters.repoUrl }}
    #     - id: publish
    #       name: Publish
    #       action: publish:github
    #       input:
    #         repoUrl: ${{ parameters.repoUrl }}
    #         token: ${{ secrets.USER_OAUTH_TOKEN }}
    #         requiredCodeOwnerReviews: true
    #         sourcePath: ./new-repo
    #         allowedHosts: ['github.com']
    #         description: ${{ parameters.description }}
    #         access: ${{ parameters.repoUrl | replace(r/.*owner=/, "") | replace(r/&repo=.*/, "") }}/${{ parameters.repoOwner }}
    #         repoVisibility: internal
    #         defaultBranch: main
    #         deleteBranchOnMerge: true
    #         allowMergeCommit: false
    #         allowSquashMerge: true
    #         allowRebaseMerge: false
    
    #     - id: log-languages
    #       name: Log languages
    #       action: debug:log
    #       input:
    #         message: 'Hello, ${{ parameters.languages[0] }}!'
    - id: log-name
      name: Log Message 1
      action: debug:log
      input:
        message: "${{ parameters.repoUrl }}"
    - id: log-name
      name: Log Message 2
      action: debug:log
      input:
        message: ${{ '${{ parameters.repoUrl }}' }}
    - id: log-name
      name: Log Message 3
      action: debug:log
      input:
        message: {% raw %} ${{ parameters.repoUrl }} {% endraw %}

#     - id: log-name
#       name: Log Message
#       action: debug:log
#       input:
#         message: 'Hello, ${{ parameters.repoUrl }}!'
#     - id: log-age
#       name: Log Message
#       action: debug:log
#       input:
#         message: 'Hello, ${{ parameters.age }}!'
#     - id: log-entity
#       name: Log Message
#       action: debug:log
#       input:
#         message: 'Hello, ${{ parameters.entity }}!'
#     - id: log-entityName
#       name: Log Message
#       action: debug:log
#       input:
#         message: 'Hello, ${{ parameters.entityName}}!'
#     - id: log-entityTag
#       name: Log Message
#       action: debug:log
#       input:
#         message: 'Hello, ${{ parameters.entityTag }}!'
#     - id: log-repoUrl
#       name: Log Message
#       action: debug:log
#       input:
#         message: 'Hello, ${{ parameters.repoUrl }}!'
#     - id: log-owner
#       name: Log Message
#       action: debug:log
#       input:
#         message: 'Hello, ${{ parameters.owner }}!'
#     - id: log-ownedEntity
#       name: Log Message
#       action: debug:log
#       input:
#         message: 'Hello, ${{ parameters.ownedEntity }}!'
#     - id: log-person
#       name: Log Message
#       action: debug:log
#       input:
#         message: 'Hello, ${{ parameters.person }}!'

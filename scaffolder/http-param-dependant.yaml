---
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: http-param-new
  title: Http param test
spec:
  owner: roadie
  type: service
  parameters:
    definitions:
      facetMap:
        enumNames:
          - 'Kind'
          - 'API Version'
        enum:
          - facet: 'kind'
            jsonata: 'facets.kind.value'
          - facet: 'apiVersion'
            jsonata: 'facets.apiVersion.value'
    properties:
      facetValue:
        type: string
        enum: ['kind', 'apiVersion']
      objectFacet:
        title: 'Facet Mapping'
        $ref: "#/definitions/facetMap"
          #            enum: [
#              {
#                facet": "kind",
#                "jsonata": 'facets.kind.value',
#              },
#              {
#                "facet": "api",
#                "jsonata": 'facets.apiVersion.value',
#              },
#            ]
#            properties:
#              kind:
#                type: string
#                enum: [ 'kind', 'apiVersion' ]
#              jsonataExpression:
#                type: string
#                enum: [ 'kind', 'apiVersion' ]
#              arraySelector:
#                type: string
#                enum: [ 'facets.kind', 'facets.apiVersion' ]
#              valueSelector:
#                type: string
#                enum: [ 'count' ]
#              labelSelector:
#                type: string
#                enum: [ 'value' ]
      custom:
        type: string
        # Use `SelectFieldFromApi` to configure the select field for the entry.
        ui:field: SelectFieldFromApi
        ui:options:
          title: Dependant select
          description: My custom description for the component

          # The Path on the Backstage API and the parameters to fetch the data for the dropdown
          path: 'catalog/entity-facets'

          # (Optional) This is the key of an additional dynamic query parameter that can be added to the request
          previousFieldParamRequestKey: 'facet'
          previousFieldParamValueLookupKey: 'objectFacet.facet'
          previousFieldJsonataLookupKey: 'objectFacet.jsonata'
#              jsonataExpression: 'facets.kind.value'
#              # (Optional) This is the key of a previous property who's selected value will be used as an additional query parameter value on the request
#              # (Optional) This is the key of a previous property who's selected value will be used as an additional query parameter value on the request
#              previousFieldArraySelectorLookupKey: 'objectFacet.arraySelector'
#              previousFieldValueSelectorLookupKey: 'objectFacet.valueSelector'
#              previousFieldLabelSelectorLookupKey: 'objectFacet.labelSelector'
  steps:
    - id: log-result
      action: debug:log
      input:
        message: "Available Snyk projects: ${{ parameters.custom }}"